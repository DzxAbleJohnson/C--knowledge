与普通引用不同的是，对常量的引用不能被用作修改它所绑定的对象；
const int ci = 1024;
const int &r1=ci;			//正确，引用及其对应的对象都是常量
const int &r1 = 42;			//正确，引用及其对应的对象都是常量
r1=42;						//错误：r1是对常量的引用
int &r2=ci;					//错误，非常量引用指向一个常量对象


C++程序员经常把词组"对const的引用"简称为常量引用；
但const的引用允许对普通的对象进行引用，如：
int i=0;
const int &r1=i;			//正确
int &r4=r1*2;				//错误：r4是一个普通的非常量引用


但是对于
int a=50;
const int *p = a;			//错误，常量对非常量

const int a=50;
int p =&a;					//错误，const必须对const，引用是个例外


我们可以使用非常量来初始化一个底层const的引用，但反过来不行；同时一个普通的引用必须用同类型的对象初始化；（important）
const int &p;	//底层const
const int *p;	//底层const
而常量的初始化必须要用常量来初始化，非常量可以用常量来初始化；